<?xml version="1.0" encoding="utf-8"?>
<Window
	x:Class="ApexRandomChoise.Window1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	Title="ApexRandomChoise" xmlns:Controls0="clr-namespace:System;assembly=mscorlib"
	Height="176"
	Width="393"
	ResizeMode="NoResize">
	<Grid>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Width="87"
			Content="Bloodhound"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="8,31,0,0"
			x:Name="ch2">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Width="87"
			Height="15"
			Content="Bangalore"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="8,8,0,0"
			x:Name="ch1">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Width="87"
			Content="Wattson"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="8,54,0,0"
			x:Name="ch3">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Width="87"
			Content="Gibraltar"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="8,77,0,0"
			x:Name="ch4">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Width="87"
			Content="Caustic"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="115,8,0,0"
			x:Name="ch5">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Width="87"
			Content="Crypto"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="115,31,0,0"
			x:Name="ch6">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Width="87"
			Content="Lifeline"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="115,54,0,0"
			x:Name="ch7">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Width="87"
			Content="Loba"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="115,77,0,0"
			x:Name="ch8">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Content="Mirage"
			Width="87"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			x:Name="ch9"
			Margin="202,8,0,121">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Width="87"
			Content="Octain"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="202,31,0,0"
			x:Name="ch10">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Width="87"
			Content="Pathfinder"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="202,54,0,0"
			x:Name="ch11">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Width="87"
			Content="Revenant"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="202,77,0,0"
			x:Name="ch12">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<CheckBox
			RenderTransformOrigin="23.25,0.3667"
			Height="15"
			Content="Wraith"
			Grid.Column="0"
			Grid.Row="0"
			VerticalAlignment="Top"
			x:Name="ch13"
			Width="87"
			HorizontalAlignment="Right"
			Margin="0,8,7,0">
			<CheckBox.Resources>
				<Style
					TargetType="CheckBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
					<Style.Resources>
						<ResourceDictionary />
					</Style.Resources>
					<Setter
						Property="FrameworkElement.FocusVisualStyle">
						<Setter.Value>
							<Style
								TargetType="IFrameworkInputElement">
								<Style.Resources>
									<ResourceDictionary />
								</Style.Resources>
								<Setter
									Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle
												Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
												StrokeThickness="1"
												StrokeDashArray="1 2"
												Margin="2,2,2,2"
												SnapsToDevicePixels="True" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Panel.Background">
						<Setter.Value>
							<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderBrush">
						<Setter.Value>
							<SolidColorBrush>#FF707070</SolidColorBrush>
						</Setter.Value>
					</Setter>
					<Setter
						Property="TextElement.Foreground">
						<Setter.Value>
							<DynamicResource
								ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
						</Setter.Value>
					</Setter>
					<Setter
						Property="Border.BorderThickness">
						<Setter.Value>
							<Thickness>1,1,1,1</Thickness>
						</Setter.Value>
					</Setter>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="CheckBox">
								<Grid
									Background="#00FFFFFF"
									Name="templateRoot"
									SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="*" />
									</Grid.ColumnDefinitions>
									<Border
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Background="{TemplateBinding Panel.Background}"
										Name="checkBoxBorder"
										Margin="1,1,1,1"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
										<Grid
											Name="markGrid">
											<Path
												Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
												Stretch="None"
												Fill="#FF212121"
												Name="optionMark"
												Margin="1,1,1,1"
												Opacity="0" />
											<Rectangle
												Fill="#FF212121"
												Name="indeterminateMark"
												Margin="2,2,2,2"
												Opacity="0" />
										</Grid>
									</Border>
									<ContentPresenter
										RecognizesAccessKey="True"
										Content="{TemplateBinding ContentControl.Content}"
										ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
										ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
										Name="contentPresenter"
										Margin="{TemplateBinding Control.Padding}"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										Focusable="False"
										Grid.Column="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger
										Property="ContentControl.HasContent">
										<Setter
											Property="FrameworkElement.FocusVisualStyle">
											<Setter.Value>
												<Style
													TargetType="IFrameworkInputElement">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter
														Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle
																	Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
																	StrokeThickness="1"
																	StrokeDashArray="1 2"
																	Margin="14,0,0,0"
																	SnapsToDevicePixels="True" />
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Control.Padding">
											<Setter.Value>
												<Thickness>4,-1,0,0</Thickness>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsMouseOver">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFF3F9FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF5593FF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="UIElement.IsEnabled">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFE6E6E6</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFBCBCBC</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF707070</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>False</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ButtonBase.IsPressed">
										<Setter
											Property="Panel.Background"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FFD9ECFF</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Border.BorderBrush"
											TargetName="checkBoxBorder">
											<Setter.Value>
												<SolidColorBrush>#FF3C77DD</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="optionMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Setter
											Property="Shape.Fill"
											TargetName="indeterminateMark">
											<Setter.Value>
												<SolidColorBrush>#FF212121</SolidColorBrush>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<s:Boolean>True</s:Boolean>
										</Trigger.Value>
									</Trigger>
									<Trigger
										Property="ToggleButton.IsChecked">
										<Setter
											Property="UIElement.Opacity"
											TargetName="optionMark">
											<Setter.Value>
												<s:Double>0</s:Double>
											</Setter.Value>
										</Setter>
										<Setter
											Property="UIElement.Opacity"
											TargetName="indeterminateMark">
											<Setter.Value>
												<s:Double>1</s:Double>
											</Setter.Value>
										</Setter>
										<Trigger.Value>
											<x:Null />
										</Trigger.Value>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</CheckBox.Resources>
		</CheckBox>
		<Button
			Content="CHOOSE"
			x:Name="button1"
			Click="button1_Click"
			Width="81"
			Height="31"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="8,105,0,0" />
		<Label
			x:Name="label"
			Width="225"
			Height="31"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="117,105,0,0" />
	</Grid>
</Window>